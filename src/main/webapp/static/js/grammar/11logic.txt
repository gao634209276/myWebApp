JavaScript If...Else 语句
条件语句用于基于不同的条件来执行不同的动作。
通常在写代码时，您总是需要为不同的决定来执行不同的动作。您可以在代码中使用条件语句来完成该任务。
在 JavaScript 中，我们可使用以下条件语句：
	if 语句 - 只有当指定条件为 true 时，使用该语句来执行代码
	if...else 语句 - 当条件为 true 时执行代码，当条件为 false 时执行其他代码
	if...else if....else 语句- 使用该语句来选择多个代码块之一来执行
	switch 语句 - 使用该语句来选择多个代码块之一来执行


JavaScript switch 语句
	switch 语句用于基于不同的条件来执行不同的动作。
	语法:
		switch(n)
		{
		    case 1:
		        执行代码块 1
		        break;
		    case 2:
		        执行代码块 2
		        break;
		    default:
		        与 case 1 和 case 2 不同时执行的代码
		}
	工作原理：首先设置表达式 n（通常是一个变量）。
	随后表达式的值会与结构中的每个 case 的值做比较。
	如果存在匹配，则与该 case 关联的代码块会被执行。
	请使用 break 来阻止代码自动地向下一个 case 运行。

JavaScript for 循环
	循环可以将代码块执行指定的次数.
	JavaScript 支持不同类型的循环：
	for - 循环代码块一定的次数
		for (var i=0,len=cars.length; i<len; i++){
		    document.write(cars[i] + "<br>");
		}
		var i=2,len=cars.length;
		for (; i<len; i++){
		    document.write(cars[i] + "<br>");
		}
		var i=0,len=cars.length;
		for (; i<len; ){
		    document.write(cars[i] + "<br>");
		    i++;
		}
	for/in - 循环遍历对象的属性
		var person={fname:"John",lname:"Doe",age:25};
		for (x in person){
		    txt=txt + person[x];
		}
	while - 当指定的条件为 true 时循环指定的代码块
		while (i<5){
		    x=x + "The number is " + i + "<br>";
		    i++;
		}
	do/while - 同样当指定的条件为 true 时循环指定的代码块
		do{
			需要执行的代码
		}
		while (条件);


JavaScript Break 和 Continue 语句
	break 语句用于跳出循环。
	continue 用于跳过循环中的一个迭代。
	Break 语句
		for (i=0;i<10;i++){
		    if (i==3)break;
		    x=x + "The number is " + i + "<br>";
		}
	Continue 语句
	continue 语句中断循环中的迭代，如果出现了指定的条件，然后继续循环中的下一个迭代。
	该例子跳过了值 3：
		for (i=0;i<10;i++){
		    if (i==3)continue;
		    x=x + "The number is " + i + "<br>";
		}

JavaScript 标签
	可以对 JavaScript 语句进行标记。
	如需标记 JavaScript 语句，请在语句之前加上冒号：
		label:
		statements
	break 和 continue 语句仅仅是能够跳出代码块的语句。
	语法:
		break labelname;
		continue labelname;
	continue 语句（带有或不带标签引用）只能用在循环中。
	break 语句（不带标签引用），只能用在循环或 switch 中。
	通过标签引用，break 语句可用于跳出任何 JavaScript 代码块：











